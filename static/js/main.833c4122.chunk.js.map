{"version":3,"sources":["components/Footer.jsx","components/Heading.jsx","components/Board.jsx","components/Body.jsx","App.js","index.js"],"names":["Footer","currentYear","Date","getFullYear","Heading","className","currentPlayer","spotCheckers","Board","props","getLegalMoves","legalMoves","i","length","push","getLegalMoves1","boardState","minimax","copyGameBoard","isMax","checkGameState","gameResult","bestScore","Infinity","score","makeMove","Math","max","min","gameBoard","move","counter","transition","setTimeout","bestMove","setSpot0","setSpot1","setSpot2","setSpot3","setSpot4","setSpot5","setSpot6","setSpot7","setSpot8","console","log","setDisplayDrawState","setDisplayLoseState","setDisplayWinState","smartComputerAction","handleClick","e","id","target","useState","spot0","spot1","spot2","spot3","spot4","spot5","spot6","spot7","spot8","displayWinState","displayLoseState","displayDrawState","style","display","src","alt","width","unlockGame","onClick","Body","playButton","setPlayButton","setBoardState","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.833c4122.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Footer() {\n  const currentYear = new Date().getFullYear();\n  return (\n    <footer>&copy; Copyright {currentYear} eddieprogramming</footer>\n\n  );\n}\n\nexport default Footer;\n","import React from 'react';\n\nfunction Heading() {\n  return <h1 className = \"heading\">Welcome To My Unbeatable AI Tic-Tac-Toe Game!</h1>\n}\n\nexport default Heading;\n","import React, {useState} from 'react';\n\nconst user = 1;\nconst computer = 2;\nvar currentPlayer = user;\nvar spotCheckers = [\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"];\n\n\nfunction Board(props) {\n\n  function getLegalMoves() {\n    const legalMoves = [];\n    for (var i =0; i < spotCheckers.length; i++) {\n      if (spotCheckers[i] === \"\") {\n        legalMoves.push(i);\n      }\n    }\n    return legalMoves\n  }\n\n  function getLegalMoves1(boardState) {\n    const legalMoves = [];\n    for (var i =0; i < boardState.length; i++) {\n      if (boardState[i] === \"\") {\n        legalMoves.push(i);\n      }\n    }\n    return legalMoves;\n  }\n\n  function startGame() { // wipe out the whole game state and restart again\n    spotCheckers = [\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"];\n    setSpot0(\"\");\n    setSpot1(\"\");\n    setSpot2(\"\");\n    setSpot3(\"\");\n    setSpot4(\"\");\n    setSpot5(\"\");\n    setSpot6(\"\");\n    setSpot7(\"\");\n    setSpot8(\"\");\n    setDisplayDrawState(\"none\");\n    setDisplayWinState(\"none\");\n    setDisplayLoseState(\"none\");\n    currentPlayer = user;\n  }\n\n  function finishMessage() {\n    const gameResult = checkGameState();\n    if (gameResult == 1) {\n      setDisplayWinState(\"\");\n    } else if (gameResult == 2) {\n      setDisplayLoseState(\"\");\n    } else if (gameResult == 0) {\n      setDisplayDrawState(\"\");\n      return;\n    }\n    console.log(\"finish\");\n  }\n\n\n  function smartComputerAction() {\n    // first check the game if it is finished, if it is not, proceed to calculating the best move\n    var gameResult = checkGameState();\n    if (gameResult == 1) {\n      setDisplayWinState(\"\");\n      return;\n    } else if (gameResult == 2) {\n      setDisplayLoseState(\"\");\n      return;\n    } else if (gameResult == 0){\n      setDisplayDrawState(\"\");\n      return;\n    }\n\n    var bestScore = -Infinity;\n    var bestMove;\n\n    var legalMoves = getLegalMoves(); // get a list of legal moves\n\n    // var copyGameBoard = getCopyGameBoard(spotCheckers); // get a copy of the current board\n\n    for (var i = 0; i < legalMoves.length; i++) {\n      spotCheckers = makeMove(spotCheckers,legalMoves[i],computer);\n      // console.log(copyGameBoard);\n      var score = minimax(spotCheckers,false);\n      spotCheckers[legalMoves[i]] = \"\"; // change the board back to the previous state\n      if (score > bestScore) {\n        bestMove = legalMoves[i];\n        bestScore = score;\n      }\n\n    }\n    // console.log(\"bestMove\",bestMove);\n\n    spotCheckers[bestMove] = \"X\";\n\n    // change the interface\n    switch(bestMove) {\n      case 0:\n        setSpot0(\"X\");\n        break;\n      case 1:\n        setSpot1(\"X\");\n        break;\n      case 2:\n        setSpot2(\"X\");\n        break;\n      case 3:\n        setSpot3(\"X\");\n        break;\n      case 4:\n        setSpot4(\"X\");\n        break;\n      case 5:\n        setSpot5(\"X\");\n        break;\n      case 6:\n        setSpot6(\"X\");\n        break;\n      case 7:\n        setSpot7(\"X\");\n        break;\n      case 8:\n        setSpot8(\"X\");\n        break;\n      default:\n      console.log(\"error\");\n  }\n\n  gameResult = checkGameState();\n  if (gameResult == 1) {\n    setDisplayWinState(\"\");\n    return;\n  } else if (gameResult == 2) {\n    setDisplayLoseState(\"\");\n    return;\n  } else if (gameResult == 0){\n    setDisplayDrawState(\"\");\n    return;\n  }\n\n    currentPlayer = user;\n\n} // end of function\n\n  // currentPlayer should be 2, computer is making a move\n  function minimax(copyGameBoard,isMax) {\n\n    if (checkGameState(copyGameBoard) !== -1) {\n\n      var gameResult = checkGameState(copyGameBoard);\n      if (gameResult == 0) {\n\n        return 0;\n      } else if (gameResult == 2) { // this means pc won\n\n        return 1;\n      } else {\n\n        return -1; // when game result == 1, user won\n      }\n    }\n\n    if (isMax) {\n      var bestScore = -Infinity;\n      var legalMoves = getLegalMoves1(copyGameBoard);\n      for (var i = 0; i < legalMoves.length; i++) {\n\n        var copyGameBoard = makeMove(copyGameBoard,legalMoves[i],computer);\n        var score = minimax(copyGameBoard, false);\n        copyGameBoard[legalMoves[i]] = \"\"; // roll back\n        bestScore = Math.max(score, bestScore);\n      }\n\n    } else {\n      var bestScore = Infinity;\n      var legalMoves = getLegalMoves1(copyGameBoard);\n      for (var i = 0; i < legalMoves.length; i++) {\n        var copyGameBoard = makeMove(copyGameBoard,legalMoves[i],user);\n        var score = minimax(copyGameBoard, true);\n        copyGameBoard[legalMoves[i]] = \"\"; // roll back\n        bestScore = Math.min(score, bestScore);\n      }\n\n    }\n    return bestScore;\n\n  }\n\n  function makeMove(gameBoard, move, currentPlayer) { // this returns a new boardState\n    // var copyGameBoard = getCopyGameBoard(gameBoard);\n    if (currentPlayer == 1) { // this means its the user\n      gameBoard[move] = \"O\";\n      return gameBoard;\n    } else {\n      gameBoard[move] = \"X\"; // this means its the computer to make a move\n      return gameBoard;\n    }\n  }\n\n  function getOpponent(currentPlayer) {\n    return 3 - currentPlayer;\n  }\n\n  function getCopyGameBoard(boardState){\n    const copyGameBoard =[];\n    for (var i =0; i < boardState.length; i++) {\n      copyGameBoard.push(boardState[i]);\n    }\n    return copyGameBoard;\n  }\n\n  function checkGameState(boardState) { // this function is to check a simulated board\n    if (boardState[0] === \"O\" && boardState[1] === \"O\" && boardState[2] === \"O\") {\n      return 1;\n    } else if (boardState[3] === \"O\" && boardState[4] === \"O\" && boardState[5] === \"O\") {\n      return 1;\n    } else if (boardState[6] === \"O\" && boardState[7] === \"O\" && boardState[8] === \"O\") {\n      return 1;\n    } else if (boardState[0] === \"O\" && boardState[3] === \"O\" && boardState[6] === \"O\") {\n      return 1;\n    } else if (boardState[1] === \"O\" && boardState[4] === \"O\" && boardState[7] === \"O\") {\n      return 1;\n    } else if (boardState[2] === \"O\" && boardState[5] === \"O\" && boardState[8] === \"O\") {\n      return 1;\n    } else if (boardState[0] === \"O\" && boardState[4] === \"O\" && boardState[8] === \"O\") {\n      return 1;\n    } else if (boardState[2] === \"O\" && boardState[4] === \"O\" && boardState[6] === \"O\") {\n      return 1;\n    } else if (boardState[0] === \"X\" && boardState[1] === \"X\" && boardState[2] === \"X\") {\n      return 2;\n    } else if (boardState[3] === \"X\" && boardState[4] === \"X\" && boardState[5] === \"X\") {\n      return 2;\n    } else if (boardState[6] === \"X\" && boardState[7] === \"X\" && boardState[8] === \"X\") {\n      return 2;\n    } else if (boardState[0] === \"X\" && boardState[3] === \"X\" && boardState[6] === \"X\") {\n      return 2;\n    } else if (boardState[1] === \"X\" && boardState[4] === \"X\" && boardState[7] === \"X\") {\n      return 2;\n    } else if (boardState[2] === \"X\" && boardState[5] === \"X\" && boardState[8] === \"X\") {\n      return 2;\n    } else if (boardState[0] === \"X\" && boardState[4] === \"X\" && boardState[8] === \"X\") {\n      return 2;\n    } else if (boardState[2] === \"X\" && boardState[4] === \"X\" && boardState[6] === \"X\") {\n      return 2;\n    }\n\n    var counter = 0;\n    for (var i = 0; i < boardState.length; i++) {\n      if (boardState[i] === \"X\" || boardState[i] === \"O\") {\n        counter ++;\n      }\n    }\n    // if all the spots are occupied and not 1 or 2 returned yet, that means its a draw, otherwise the game is still on\n    if (counter == 9) {\n      return 0;\n    } else {\n      return -1;\n    }\n  }\n\n\n  function computerAction() {\n    var gameResult = checkGameState();\n    // console.log(typeof gameResult);\n    if (gameResult == 1) {\n      setDisplayWinState(\"\");\n      return;\n    } else if (gameResult == 2) {\n      setDisplayLoseState(\"\");\n      return;\n    } else if (gameResult == 0){\n      setDisplayDrawState(\"\");\n      return;\n    }\n\n    var legalMoves = getLegalMoves();\n\n    var randomNumber1 = Math.floor(legalMoves.length-1);\n\n    var pickedIndex = legalMoves[randomNumber1];\n\n    spotCheckers[pickedIndex] = \"X\"; // change the array\n\n    // change the interface\n    switch(pickedIndex) {\n      case 0:\n        setSpot0(\"X\");\n        break;\n      case 1:\n        setSpot1(\"X\");\n        break;\n      case 2:\n        setSpot2(\"X\");\n        break;\n      case 3:\n        setSpot3(\"X\");\n        break;\n      case 4:\n        setSpot4(\"X\");\n        break;\n      case 5:\n        setSpot5(\"X\");\n        break;\n      case 6:\n        setSpot6(\"X\");\n        break;\n      case 7:\n        setSpot7(\"X\");\n        break;\n      case 8:\n        setSpot8(\"X\");\n        break;\n      default:\n      console.log(\"error\");\n    }\n\n    // when the computer finishes making a move, immediately check the result\n    gameResult = checkGameState();\n    if (gameResult == 1) {\n      setDisplayWinState(\"\");\n      return;\n    } else if (gameResult == 2) {\n      setDisplayLoseState(\"\");\n      return;\n    } else if (gameResult == 0){\n      setDisplayDrawState(\"\");\n      return;\n    }\n\n    // if the game is not over rotate to the user\n    currentPlayer = user;\n  }// end of computerAction func\n\n  function transition() { // after 0.1 second, the computer will make a random move\n    currentPlayer = computer;\n    setTimeout(()=>{\n      // computerAction();\n      smartComputerAction(); // change to minimax\n    },100);\n  }\n\n  function checkGameState() {\n    if (spotCheckers[0] === \"O\" && spotCheckers[1] === \"O\" && spotCheckers[2] === \"O\") {\n      return 1;\n    } else if (spotCheckers[3] === \"O\" && spotCheckers[4] === \"O\" && spotCheckers[5] === \"O\") {\n      return 1;\n    } else if (spotCheckers[6] === \"O\" && spotCheckers[7] === \"O\" && spotCheckers[8] === \"O\") {\n      return 1;\n    } else if (spotCheckers[0] === \"O\" && spotCheckers[3] === \"O\" && spotCheckers[6] === \"O\") {\n      return 1;\n    } else if (spotCheckers[1] === \"O\" && spotCheckers[4] === \"O\" && spotCheckers[7] === \"O\") {\n      return 1;\n    } else if (spotCheckers[2] === \"O\" && spotCheckers[5] === \"O\" && spotCheckers[8] === \"O\") {\n      return 1;\n    } else if (spotCheckers[0] === \"O\" && spotCheckers[4] === \"O\" && spotCheckers[8] === \"O\") {\n      return 1;\n    } else if (spotCheckers[2] === \"O\" && spotCheckers[4] === \"O\" && spotCheckers[6] === \"O\") {\n      return 1;\n    } else if (spotCheckers[0] === \"X\" && spotCheckers[1] === \"X\" && spotCheckers[2] === \"X\") {\n      return 2;\n    } else if (spotCheckers[3] === \"X\" && spotCheckers[4] === \"X\" && spotCheckers[5] === \"X\") {\n      return 2;\n    } else if (spotCheckers[6] === \"X\" && spotCheckers[7] === \"X\" && spotCheckers[8] === \"X\") {\n      return 2;\n    } else if (spotCheckers[0] === \"X\" && spotCheckers[3] === \"X\" && spotCheckers[6] === \"X\") {\n      return 2;\n    } else if (spotCheckers[1] === \"X\" && spotCheckers[4] === \"X\" && spotCheckers[7] === \"X\") {\n      return 2;\n    } else if (spotCheckers[2] === \"X\" && spotCheckers[5] === \"X\" && spotCheckers[8] === \"X\") {\n      return 2;\n    } else if (spotCheckers[0] === \"X\" && spotCheckers[4] === \"X\" && spotCheckers[8] === \"X\") {\n      return 2;\n    } else if (spotCheckers[2] === \"X\" && spotCheckers[4] === \"X\" && spotCheckers[6] === \"X\") {\n      return 2;\n    }\n\n    var counter = 0;\n    for (var i = 0; i < spotCheckers.length; i++) {\n      if (spotCheckers[i] === \"X\" || spotCheckers[i] === \"O\") {\n        counter ++;\n      }\n    }\n    // if all the spots are occupied and not 1 or 2 returned yet, that means its a draw, otherwise the game is still on\n    if (counter == 9) {\n      return 0;\n    } else {\n      return -1;\n    }\n  }\n\n\n  function handleClick(e) {\n    const gameResult = checkGameState()\n    if (gameResult == 1) {\n      setDisplayWinState(\"\");\n      return;\n    } else if (gameResult == 2) {\n      setDisplayLoseState(\"\");\n      return;\n    } else if (gameResult == 0){\n      setDisplayDrawState(\"\");\n      return;\n    }\n\n    if (currentPlayer == user) { // if it is the user's turn then we record and click and change it\n      const {id} = e.target; // deconstruct the event object\n      if (id === \"0\") {\n        if (spotCheckers[0] !== \"X\" && spotCheckers[0] !== \"O\" ) {\n          setSpot0(\"O\");\n          spotCheckers[0] = \"O\";\n        } else {\n          console.log(\"not again\");\n          return;\n        }\n      } else if (id === \"1\") {\n        if (spotCheckers[1] !== \"X\" && spotCheckers[1] !== \"O\" ) {\n          setSpot1(\"O\");\n          spotCheckers[1] = \"O\";\n        } else {\n          console.log(\"not again\");\n          return;\n        }\n      } else if (id === \"2\") {\n        if (spotCheckers[2] !== \"X\" && spotCheckers[2] !== \"O\" ) {\n          setSpot2(\"O\");\n          spotCheckers[2] = \"O\";\n        } else {\n          console.log(\"not again\");\n          return;\n        }\n      } else if (id === \"3\") {\n        if (spotCheckers[3] !== \"X\" && spotCheckers[3] !== \"O\" ) {\n          setSpot3(\"O\");\n          spotCheckers[3] = \"O\";\n        } else {\n          console.log(\"not again\");\n          return;\n        }\n      } else if (id === \"4\") {\n        if (spotCheckers[4] !== \"X\" && spotCheckers[4] !== \"O\" ) {\n          setSpot4(\"O\");\n          spotCheckers[4] = \"O\";\n        } else {\n          console.log(\"not again\");\n          return;\n        }\n\n      } else if (id === \"5\") {\n        if (spotCheckers[5] !== \"X\" && spotCheckers[5] !== \"O\" ) {\n          setSpot5(\"O\");\n          spotCheckers[5] = \"O\";\n        } else {\n          console.log(\"not again\");\n          return;\n        }\n      } else if (id === \"6\") {\n        if (spotCheckers[6] !== \"X\" && spotCheckers[6] !== \"O\" ) {\n          setSpot6(\"O\");\n          spotCheckers[6] = \"O\";\n        } else {\n          console.log(\"not again\");\n          return;\n        }\n\n      } else if (id === \"7\") {\n        if (spotCheckers[7] !== \"X\" && spotCheckers[7] !== \"O\" ) {\n          setSpot7(\"O\");\n          spotCheckers[7] = \"O\";\n        } else {\n          console.log(\"not again\");\n          return;\n        }\n\n      } else if (id === \"8\") {\n        if (spotCheckers[8] !== \"X\" && spotCheckers[8] !== \"O\" ) {\n          setSpot8(\"O\");\n          spotCheckers[8] = \"O\";\n        } else {\n          console.log(\"not again\");\n          return;\n        }\n      }\n      // console.log(spotCheckers);\n      transition(); // transition to the computer\n    }\n  }\n\n  const [spot0, setSpot0] = useState(\"\");// set all the beginning spots to \"\"\n  const [spot1, setSpot1] = useState(\"\");\n  const [spot2, setSpot2] = useState(\"\");\n  const [spot3, setSpot3] = useState(\"\");\n  const [spot4, setSpot4] = useState(\"\");\n  const [spot5, setSpot5] = useState(\"\");\n  const [spot6, setSpot6] = useState(\"\");\n  const [spot7, setSpot7] = useState(\"\");\n  const [spot8, setSpot8] = useState(\"\");\n\n\n  const [displayWinState,setDisplayWinState] = useState(\"none\");\n  const [displayLoseState,setDisplayLoseState] = useState(\"none\");\n  const [displayDrawState,setDisplayDrawState] = useState(\"none\");\n\n  function handleClick(e) {\n    const gameResult = checkGameState()\n    if (gameResult == 1) {\n      setDisplayWinState(\"\");\n      return;\n    } else if (gameResult == 2) {\n      setDisplayLoseState(\"\");\n      return;\n    } else if (gameResult == 0){\n      setDisplayDrawState(\"\");\n      return;\n    }\n\n    if (currentPlayer == user) { // if it is the user's turn then we record and click and change it\n      const {id} = e.target; // deconstruct the event object\n      if (id === \"0\") {\n        if (spotCheckers[0] !== \"X\" && spotCheckers[0] !== \"O\" ) {\n          setSpot0(\"O\");\n          spotCheckers[0] = \"O\";\n        } else {\n          console.log(\"not again\");\n          return;\n        }\n      } else if (id === \"1\") {\n        if (spotCheckers[1] !== \"X\" && spotCheckers[1] !== \"O\" ) {\n          setSpot1(\"O\");\n          spotCheckers[1] = \"O\";\n        } else {\n          console.log(\"not again\");\n          return;\n        }\n      } else if (id === \"2\") {\n        if (spotCheckers[2] !== \"X\" && spotCheckers[2] !== \"O\" ) {\n          setSpot2(\"O\");\n          spotCheckers[2] = \"O\";\n        } else {\n          console.log(\"not again\");\n          return;\n        }\n      } else if (id === \"3\") {\n        if (spotCheckers[3] !== \"X\" && spotCheckers[3] !== \"O\" ) {\n          setSpot3(\"O\");\n          spotCheckers[3] = \"O\";\n        } else {\n          console.log(\"not again\");\n          return;\n        }\n      } else if (id === \"4\") {\n        if (spotCheckers[4] !== \"X\" && spotCheckers[4] !== \"O\" ) {\n          setSpot4(\"O\");\n          spotCheckers[4] = \"O\";\n        } else {\n          console.log(\"not again\");\n          return;\n        }\n\n      } else if (id === \"5\") {\n        if (spotCheckers[5] !== \"X\" && spotCheckers[5] !== \"O\" ) {\n          setSpot5(\"O\");\n          spotCheckers[5] = \"O\";\n        } else {\n          console.log(\"not again\");\n          return;\n        }\n      } else if (id === \"6\") {\n        if (spotCheckers[6] !== \"X\" && spotCheckers[6] !== \"O\" ) {\n          setSpot6(\"O\");\n          spotCheckers[6] = \"O\";\n        } else {\n          console.log(\"not again\");\n          return;\n        }\n\n      } else if (id === \"7\") {\n        if (spotCheckers[7] !== \"X\" && spotCheckers[7] !== \"O\" ) {\n          setSpot7(\"O\");\n          spotCheckers[7] = \"O\";\n        } else {\n          console.log(\"not again\");\n          return;\n        }\n\n      } else if (id === \"8\") {\n        if (spotCheckers[8] !== \"X\" && spotCheckers[8] !== \"O\" ) {\n          setSpot8(\"O\");\n          spotCheckers[8] = \"O\";\n        } else {\n          console.log(\"not again\");\n          return;\n        }\n      }\n      transition(); // transition to the computer\n    }\n  }\n\n\n  return(\n    <div className = \"Board\">\n      <div style={{display:displayWinState}} className= \"winningMessage\">\n      <h1 >You Win!</h1>\n      <img src=\"./img/smallBlackMan.gif\" alt=\"smart black man\" width=\"200\"></img>\n      </div>\n      <div style={{display:displayLoseState}} className= \"losingMessage\" >\n      <h1 >You Lose!</h1>\n      <img src=\"./img/sucker.gif\" alt=\"sucker man\" width=\"200\"></img>\n      </div>\n      <div style={{display:displayDrawState}} className= \"drawGameMessage\">\n      <h1 >It's a draw!</h1>\n      <img src=\"./img/tieGame.gif\" alt=\"tie game\" width=\"200\"></img>\n      </div>\n\n      <div className = \"row border-b\" style={{display:props.unlockGame}}>\n        <div onClick= {handleClick} className =\"col border-r\" id=\"0\">{spot0}</div>\n        <div onClick= {handleClick} className =\"col border-r\" id=\"1\">{spot1}</div>\n        <div onClick= {handleClick} className =\"col \" id=\"2\">{spot2}</div>\n      </div>\n      <div className = \"row border-b\" style={{display:props.unlockGame}}>\n        <div onClick= {handleClick} className =\"col border-r\" id=\"3\">{spot3}</div>\n        <div onClick= {handleClick} className =\"col border-r\" id=\"4\">{spot4}</div>\n        <div onClick= {handleClick} className =\"col \" id=\"5\">{spot5}</div>\n      </div>\n      <div className = \"row\" style={{display:props.unlockGame}}>\n        <div onClick= {handleClick} className =\"col border-r\" id=\"6\">{spot6}</div>\n        <div onClick= {handleClick} className =\"col border-r\" id=\"7\">{spot7}</div>\n        <div onClick= {handleClick} className =\"col \" id=\"8\">{spot8}</div>\n      </div>\n      <div className = \"menu\">\n        <button onClick={startGame} className= \"playAgainButton\">Play again</button>\n\n      </div>\n    </div>\n  );\n}\n\n\nexport default Board;\n","import React, {useState} from 'react';\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\nimport Board from \"./Board\";\n\nfunction Body() {\n  const [playButton, setPlayButton] = useState(\"none\");\n  const [boardState, setBoardState] = useState(\"\"); // set the gameboard display:none at the beginning\n\n\n  function startGame() {\n    setPlayButton(\"none\");\n    setBoardState(\"\");\n  }\n\n\n  return (\n    <div className=\"Body\">\n      <div className=\"wrapper-div\">\n        <button onClick={startGame} className=\"playButton\" style= {{display: playButton}}>Play</button>\n        <Board unlockGame={boardState}/>\n      </div>\n    </div>);\n}\n\nexport default Body;\n","import React from 'react';\nimport Footer from \"./components/Footer\";\nimport Heading from \"./components/Heading\";\nimport Body from \"./components/Body\";\n\nfunction App() {\n  return (\n    <div>\n      <div className = \"mainWrapper\">\n        <Heading />\n        <Body />\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render( < App / > , document.getElementById('root'));\n"],"sourceRoot":""}